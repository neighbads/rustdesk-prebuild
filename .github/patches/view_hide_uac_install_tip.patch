diff --git a/flutter/lib/desktop/pages/desktop_home_page.dart b/flutter/lib/desktop/pages/desktop_home_page.dart
index 237691159..1a93b32cd 100644
--- a/flutter/lib/desktop/pages/desktop_home_page.dart
+++ b/flutter/lib/desktop/pages/desktop_home_page.dart
@@ -457,12 +457,8 @@ class _DesktopHomePageState extends State<DesktopHomePage>
 
     if (isWindows && !bind.isDisableInstallation()) {
       if (!bind.mainIsInstalled()) {
-        return buildInstallCard(
-            "", bind.isOutgoingOnly() ? "" : "install_tip", "Install",
-            () async {
-          await rustDeskWinManager.closeAllSubWindows();
-          bind.mainGotoInstall();
-        });
+        // UAC提示被隐藏 - 不显示install_tip
+        return const SizedBox();
       } else if (bind.mainIsInstalledLowerVersion()) {
         return buildInstallCard(
             "Status", "Your installation is lower version.", "Click to upgrade",
diff --git a/flutter/lib/desktop/pages/desktop_setting_page.dart b/flutter/lib/desktop/pages/desktop_setting_page.dart
index cc1f3f271..1dce470b1 100644
--- a/flutter/lib/desktop/pages/desktop_setting_page.dart
+++ b/flutter/lib/desktop/pages/desktop_setting_page.dart
@@ -458,16 +458,33 @@ class _GeneralState extends State<_General> {
     }
 
     return _Card(title: 'Service', children: [
-      Obx(() => _Button(serviceStop.value ? 'Start' : 'Stop', () {
-            () async {
-              serviceBtnEnabled.value = false;
-              await start_service(serviceStop.value);
-              // enable the button after 1 second
-              Future.delayed(const Duration(seconds: 1), () {
-                serviceBtnEnabled.value = true;
-              });
-            }();
-          }, enabled: serviceBtnEnabled.value))
+      Row(
+        children: [
+          Obx(() => ElevatedButton(
+            onPressed: serviceBtnEnabled.value ? () {
+              () async {
+                serviceBtnEnabled.value = false;
+                await start_service(serviceStop.value);
+                // enable the button after 1 second
+                Future.delayed(const Duration(seconds: 1), () {
+                  serviceBtnEnabled.value = true;
+                });
+              }();
+            } : null,
+            child: Text(translate(serviceStop.value ? 'Start' : 'Stop'))
+                .marginSymmetric(horizontal: 15),
+          )),
+          const SizedBox(width: 10),
+          if (isWindows && !bind.mainIsInstalled())
+            ElevatedButton(
+              onPressed: () async {
+                await bind.mainGotoInstall();
+              },
+              child: Text(translate('Install'))
+                  .marginSymmetric(horizontal: 15),
+            ),
+        ],
+      ).marginOnly(left: _kContentHMargin),
     ]);
   }
 
